/**
 * Main.java            15/04/2023
 * Aucun copyright ni "copyleft"
 */

package iut.info1.sae;

import java.io.IOException;

import iut.info1.sae.joueur.Joueur;
import iut.info1.sae.joueur.ToucheEvent;
import iut.info1.sae.solution.Solution;
import iut.info1.sae.create.CreationLabyrinthe;
import iut.info1.sae.labyrinthe.Labyrinthe;
import iut.info1.sae.save.Chargement;
import iut.info1.sae.save.Sauvegarde;

/**
 * La classe Main est la classe principale pour exécuter le programme de génération et de jeu du labyrinthe.
 * Cette classe contient la méthode main qui initialise et démarre le processus.
 *
 * @author rafael.roma
 * @author antonin.veyre
 * @author aurelien.soleil
 * @author lohan.vignals
 */
public class Main {
 
    /**
     * La méthode main démarre le système de génération et de jeu du labyrinthe.
     * Cette méthode crée et initialise les objets nécessaires pour la gestion du labyrinthe,
     * puis démarre le jeu en fonction des paramètres et des actions de l'utilisateur.
     *
     * @param args arguments passés à la ligne de commande, inutilisés dans ce programme
     */
    public static void main(String[] args) {
        // Initialisez et démarrez le système de labyrinthe ici

        Labyrinthe labyrinthe = new Labyrinthe(4, 4);
        // Labyrinthe lab = CreationLabyrinthe.creationAscendante(4, 4);
        // Labyrinthe lab = CreationLabyrinthe.creationBacktracking(4, 4);

        labyrinthe.ajoutCellule(0, 0, true, true, false, true);
        labyrinthe.ajoutCellule(1, 0, true, false, false, false);
        labyrinthe.ajoutCellule(2, 0, true, true, false, false);
        labyrinthe.ajoutCellule(3, 0, true, true, true, false);

        labyrinthe.ajoutCellule(0, 1, true, false, false, true);
        labyrinthe.ajoutCellule(1, 1, false, true, true, false);
        labyrinthe.ajoutCellule(2, 1, true, false, true, true);
        labyrinthe.ajoutCellule(3, 1, true, false, true, true);

        labyrinthe.ajoutCellule(0, 2, false, false, true, true);
        labyrinthe.ajoutCellule(1, 2, true, false, false, true);
        labyrinthe.ajoutCellule(2, 2, false, false, false, false);
        labyrinthe.ajoutCellule(3, 2, false, false, true, false);

        labyrinthe.ajoutCellule(0, 3, false, true, false, true);
        labyrinthe.ajoutCellule(1, 3, false, true, true, false);
        labyrinthe.ajoutCellule(2, 3, false, true, true, true);
        labyrinthe.ajoutCellule(3, 3, false, true, true, true);

        Joueur joueur = new Joueur(labyrinthe);	
        ToucheEvent joueurJeu = new ToucheEvent();
        joueurJeu.setJoueur(joueur);
        joueur.afficherLabyrintheJoueur();
        joueurJeu.activer();
        
//        labyrinthe.afficherLabyrinthe();
////        
//        Solution solution = new Solution(labyrinthe);
//        int[][] res = solution.solutionProfondeur(0, 0, 3, 3);
//        
//        for (int i=0; i< res.length; i++) {
//        	System.out.println("x=" + res[i][0] + "y="+ res[i][1]);
//        }
        
//        int[][] res1 = res.getTableauCoordonneesPassage();
//        boolean[][] res2 = res.getTableauMursPassage();
//        
//        for (int i = 0; i < res1.length; i++) {
//        	System.out.println("x=" + res1[i][0] + "y="+ res1[i][1]);
//        }
//        
//        for (int i = 0; i < res2.length; i++) {
//        	for (int j = 0; j < res2[i].length; j++) {
//        		System.out.println(res2[i][j]);
//        	}
//        }
        
//      Sauvegarde Save = new Sauvegarde(labyrinthe, "tktTestSu");
//      try {
//			Save.sauver();
//		} catch (IOException e) {
//			// TODO Auto-generated catch block
//			e.printStackTrace();
//		}
        
//	      Chargement chargement = new Chargement("D:\\LabyrintheV1\\Sauvegarde\\" + "tktTestSu.json");
//	      Labyrinthe charged = chargement.charger();
//	      charged.afficherLabyrinthe();
    	
//        Joueur joueur = new Joueur(null);	
    	
    }
}
 